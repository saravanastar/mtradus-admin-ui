(function(){
 var app = angular.module("mtradus",['appUtils', 'menu','ui.router','login','dashBoard', 'topHeader']);
 app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', function($stateProvider,$urlRouterProvider, $httpProvider){
	 $httpProvider.interceptors.push('appHttpInterceptor');
	 $stateProvider.state('app',{
		 abstract :  true,
		 views : {			 
			 'topheader@' : {
				 templateUrl : '/static/component/widget/top-header/template/top-header.html',
				 controller : 'topHeaderController as topHeaderControllerVm'
				 
			 },
			 'hamburger@' : {
				 templateUrl : '/static/component/widget/hamburger/template/hamburgerMenu.html',
				 controller : 'hamburgerMenuController as hamburgerMenuControllerVM'
				 
			 },
			 'footer@' : {
				 templateUrl : '/static/component/widget/footer/template/footer.html',
			 }
			 
		 },
		 resolve : {
			 spinnerEvent : function() {
				 return {
					 visible: false,
		              show: function() {
		                this.visible = true;
		              },
		              hide: function() {
		                this.visible = false;
		              }
				 }
			 },
			 userObject : function(restClient) {
				 return {
					 user : null,
					 getObject : function() {
						 if (this.user == null) {
							 restClient.get('/mtradus/service/user/login').then(function(responseData) {
								 this.user = responseData;
								 return this.user;
							 })
						 }
						 
					 },
					 loadObject : function() {
						 this.getObject();
					 }
				 }
			 }
		 }
	 });
 }]);
app.run(['$rootScope', '$state', '$stateParams', function ($rootScope,   $state, $stateParams) {
    $state.go('app.dashboard');
}]);
})();
/**
 * 
 */

(function() {
	
	function appInterceptor($q, $location,  $injector) {
		  var state;
		    return {
		      'responseError': function(response) {
		          if (response.status === 401) {
		            state = $injector.get('$state');
		            state.go('app.login', {next : state.current.name});
		          }
		          return $q.reject(response);
		        }
		    };
	}
	
	angular.module('mtradus').factory('appHttpInterceptor',['$q', '$location', '$injector', appInterceptor]);
})();
/**
 * 
 */

(function() {
	function restClient($q, $http) {
		var config = {
			method : '',
			url : '',
			// data :'',
			headers : {
				'Content-Type' : 'application/json'
			}
		}

		this.get = function(url, parameter) {
			var def = $q.defer();
			config.method = 'GET';
			config.url = url;
			if (parameter) {
				config.data = parameter;
			}
			$http(config).then(function(responseData) {
				def.resolve(responseData.data);
			}, function(errorResponse) {
				def.reject(errorResponse);
			});
			return def.promise;
		}
		
		this.post = function(url, parameter) {
			var def = $q.defer();
			config.method = 'POST';
			config.url = url;
			if (parameter) {
				config.data = parameter;
			}
			$http(config).then(function(responseData) {
				def.resolve(responseData.data);
			}, function(errorResponse) {
				def.reject(errorResponse);
			});
			return def.promise;
		}
		
		this.put = function(url, parameter) {
			var def = $q.defer();
			config.method = 'put';
			config.url = url;
			if (parameter) {
				config.data = parameter;
			}
			$http(config).then(function(responseData) {
				def.resolve(responseData.data);
			}, function(errorResponse) {
				def.reject(errorResponse);
			});
			return def.promise;
		}
		
		this.callDelete = function(url, parameter) {
			var def = $q.defer();
			config.method = 'delete';
			config.url = url;
			if (parameter) {
				config.data = parameter;
			}
			$http(config).then(function(responseData) {
				def.resolve(responseData.data);
			}, function(errorResponse) {
				def.reject(errorResponse);
			});
			return def.promise;
		}

	}
	angular.module('appUtils', []).service('restClient',
			[ '$q', '$http', restClient ]);
})();
/**
 * 
 */
(function() {
	angular.module('dashBoard',['ui.router']);
	angular.module('dashBoard').config(['$stateProvider',stateConfig]);
	function stateConfig($stateProvider) {
		$stateProvider.state('app.dashboard', {
			views : {
				'@' : {
					 templateUrl : '/static/component/widget/dashboard/template/dashboard.html',
					 controller : 'dashBoardController',
					 controllerAs : 'dashBoardControllerVM'
				 },
				 'recentChanges@app.dashboard' : {
					 templateUrl : '/static/component/widget/recent-changes/template/recent-changes.html'
				 }
			}
		});
	}
})();
(function() {
	angular.module('dashBoard').controller("dashBoardController",["$scope", dashBoardController]);
	function dashBoardController($scope) {
		var dashBoardControllerVM = this;
		dashBoardControllerVM.dashboardName = "mtradus1";
	}

})();

(function() {
	
	function hamburgerMenuController($scope) {
		var hamburgerMenuControllerVM = this;

		$scope.selectedMenu = 'dashboard';
        $scope.collapseVar = 0;
        $scope.multiCollapseVar = 0;
        
        $scope.check = function(x){
          
          if(x == $scope.collapseVar) {
            $scope.collapseVar = 0;
          } else {
            $scope.collapseVar = x;
          }
        };
        
        $scope.multiCheck = function(y){
          
          if(y==$scope.multiCollapseVar)
            $scope.multiCollapseVar = 0;
          else
            $scope.multiCollapseVar = y;
        };
		
	}

	angular.module('menu', ['ui.router']).controller("hamburgerMenuController",["$scope", hamburgerMenuController]);

})();



/**
 * 
 */

(function() {
	angular.module('menu');
	angular.module('menu').config(['$stateProvider',stateConfig]);
	function stateConfig($stateProvider) {
		$stateProvider.state('app.menu', {
			views : {
				'@' : {
					 templateUrl : '/static/component/widget/login/template/hamburgerMenu.html',
					 /*controller : 'hamburgerController',
					 controllerAs : 'hamburgerControllerVM'*/
				 }
			}
		});
	}
})();
(function() {
	
	function topHeaderController($scope, $rootScope, spinnerEvent, restClient, $state, userObject) {
		var topHeaderControllerVm = this;
		topHeaderControllerVm.spinnerEvent = spinnerEvent;
		topHeaderControllerVm.userObject = userObject;
		topHeaderControllerVm.userObject.loadObject();
		spinnerEvent.show();
		restClient.get('/mtradus/service/user/login').then(function(responseData) {
			spinnerEvent.hide();	
		}, function(errorData) {
			$state.go('app.login');
			spinnerEvent.hide();
		});
		
	}
	
	angular.module('topHeader',[]).controller('topHeaderController',['$scope', '$rootScope','spinnerEvent', 
	                                                                 'restClient', '$state', 'userObject', topHeaderController]);
})();
/**
 * 
 */

(function() {
	angular.module('login',['ui.router']);
	angular.module('login').config(['$stateProvider',stateConfig]);
	function stateConfig($stateProvider) {
		$stateProvider.state('app.login', {
			views : {
				'@' : {
					 templateUrl : '/static/component/widget/login/template/login.html',
					 controller : 'loginController',
					 controllerAs : 'loginControllerVM'
				 }
			}
		});
	}
})();
/**
 * 
 */

(function() {
	
	function loginController($scope, $rootScope, spinnerEvent, restClient, $state, userObject) {
		var loginControllerVM = this;
		
		loginControllerVM.onClickLogin =  function() {
			if (loginControllerVM.userName && loginControllerVM.password) {
				var userObject = {
						userName : loginControllerVM.userName,
						password : loginControllerVM.password
				}
				spinnerEvent.show();
				restClient.post('/mtradus/service/user/login', userObject).then(function(userData) {
					$state.go('app.dashboard');
					userObject.loadObject();
					spinnerEvent.hide();
				}, function(errorData) {
					loginControllerVM.isError = true;
					spinnerEvent.hide();
				});
			}
			
		}
		
		
	}
	angular.module("login").controller("loginController",['$scope',
	             '$rootScope', 'spinnerEvent', 'restClient', '$state', 'userObject', loginController])
})();